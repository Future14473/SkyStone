package org.firstinspires.ftc.teamcode.system

import org.firstinspires.ftc.teamcode.hardware.Hardware



//companion object {
//        private const val l1 = 20.6 * cm
//        private const val l2 = 15.7 * cm
//        private const val y = 12 * cm
//        private const val offset = -2 * cm
//        const val maxExtension = 36 * cm
//        //estimated speed in ANGULAR VELOCITY
//
//        private const val l12 = l1 * l1
//        private const val l22 = l2 * l2
//
//        val extensionRange = 0.0..maxExtension
//
//
//        //0  is perfectly to the right, PI is to the left
//        fun angleFromExtension(extension: Double): Double =
//            rawAngleFromExtension(extension + offset)
//
//        fun extensionFromAngle(angle: Double): Double =
//            rawExtensionFromAngle(angle) - offset
//
//        private fun rawAngleFromExtension(x: Double): Double {
//            val d2 = x * x + y * y
//            val d = sqrt(d2)
//            return atan2(y, x) + acos((l12 + d2 - l22) / 2 / l1 / d)
//        }
//
//        private fun rawExtensionFromAngle(angle: Double): Double {
//            return l1 * cos(angle) + sqrt(l22 - (l1 * sin(angle) - y).pow(2))
//        }
//}
